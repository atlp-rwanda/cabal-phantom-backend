{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Phantom API",
    "description": "Phantom API"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "name": "localhost"
    }
  ],

  "paths": {
    "/": {
      "get": {
        "tags": ["Welcome To Phantom API"],
        "summary": "Gets Started",
        "description": "Welcome to Phantom API.",
        "responses": {
          "200": {
            "description": "WELCOME!"
          }
        }
      }
    },

    "/api/v1/auth/login": {
      "post": {
        "tags": ["User"],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "input password and email",
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        ],

        "responses": {
          "201": {
            "description": " Log in successful ",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username/password supplied",
            "headers": {
              "message": {
                "description": "Unauthorized",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Required filled must be filled",
            "headers": {
              "message": {
                "description": "Every field must have value",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/auth": {
      "get": {
        "tags": ["User"],
        "summary": "Get All Users",
        "description": "Get All User",
        "parameters":[
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "Users Found"
          }
        }
      }
    },
    "/api/v1/auth/register":{
      "post": {
        "tags": ["User"],
        "summary": " Create a new  user",
        "description": "Create user",
        "operationId": "createUser",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "token"
          },
          {
            "in": "body",
            "name": "user",
            "description": "input name,email,birthdate and gender",
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Valid inputs are required"
          }
        }
      }
    },
    "/api/v1/auth/updateuser": {
      "patch": {
        "tags": ["User"],
        "summary": " Update the role of the user",
        "description": "Update user's role",
        "operationId": "updateRole",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/components/schemas/UpdateUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User Updated successfully"
          },
          "400": {
            "description": "Valid role and email are required"
          },
          "404": {
            "description": "Email is not found"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "example": "example@phantom.com"
          },
          "password": {
            "type": "string",
            "example": "***********"
          },
          "role": {
            "type": "string"
          },
          "birthdate": {
            "type": "integer",
            "description": "User Role",
            "format": "int32"
          },
          "gender": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "description": "User Status",
            "format": "int32"
          },
          "UpdatedAt": {
            "type": "integer",
            "description": "User Status",
            "format": "int32"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@phantom.com"
          },
          "role": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      }
    }
  }
}
